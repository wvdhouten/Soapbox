{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.1",
    "parameters": {
      "siteName": {
        "type": "string",
        "defaultValue": "DasBlog",
        "metadata": {
          "description": "The AzureWebSites name of your Web Site (some random text will be added at the end for uniqueness)"
        }
      },
      "hostingPlan": {
        "type": "string",
        "defaultValue": "DasBlogHosting",
        "metadata": {
          "description": "The name of the hosting plan to deploy to. If the plan doesn't exist, it will be created"
        }
      },
      "sku": {
        "type": "string",
        "allowedValues": [
          "F1",
          "D1",
          "B1",
          "B2",
          "B3",
          "S1",
          "S2",
          "S3",
          "P1",
          "P2",
          "P3",
          "P4"
        ],
        "defaultValue": "B1",
        "metadata": {
          "description": "The pricing tier for the hosting plan."
        }
      },
      "workerSize": {
        "type": "string",
        "allowedValues": [
          "0",
          "1",
          "2"
        ],
        "defaultValue": "0",
        "metadata": {
          "description": "The instance size of the hosting plan (small, medium, or large)."
        }
      },
      "repoURL": {
        "type": "string",
        "defaultValue": "https://github.com/poppastring/dasblog-core.git",
        "metadata": {
          "description": "The URL for the GitHub repository that contains the project to deploy."
        }
      },
      "branch": {
        "type": "string",
        "defaultValue": "main",
        "metadata": {
          "description": "The branch of the GitHub repository to use."
        }
      }
    },
    "variables": {
      "siteName": "[toLower(concat(parameters('siteName'),'-', uniqueString(resourceGroup().id)))]",
      "hostingPlanName": "[parameters('hostingPlan')]",
      "location": "[resourceGroup().location]",
      "netFrameworkVersion": "v6.0",
      "use32BitWorkerProcess": false
    },
    "resources": [
      {
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2020-12-01",
        "name": "[variables('hostingPlanName')]",
        "location": "[variables('location')]",
        "sku": {
          "name": "[parameters('sku')]",
          "capacity": "[parameters('workerSize')]"
        },
        "properties": {
          "name": "[variables('hostingPlanName')]"
        }
      },
      {
        "type": "Microsoft.Web/sites",
        "apiVersion": "2020-12-01",
        "name": "[variables('siteName')]",
        "location": "[variables('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
        ],
        "properties": {
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
          "httpsOnly": true,
          "siteconfig": {
            "netFrameworkVersion": "[variables('netFrameworkVersion')]",
            "use32BitWorkerProcess": false,
            "appSettings": [
              {
                "name": "ASPNETCORE_ENVIRONMENT",
                "value": "Production"
              }
            ]
          }
        },
        "resources": [
          {
            "type": "sourcecontrols",
            "apiVersion": "2020-12-01",
            "name": "web",
            "location": "[variables('location')]",
            "dependsOn": [
              "[resourceId('Microsoft.Web/sites', variables('siteName'))]",
              "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
            ],
            "properties": {
              "repoUrl": "[parameters('repoURL')]",
              "branch": "[parameters('branch')]",
              "isManualIntegration": true
            }
          }
        ]
      }
    ]
  }