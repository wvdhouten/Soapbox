@model Models.Account.TwoFactorAuthenticationModel
@{
    ViewData[Constants.Title] = "Two-factor authentication (2FA)";
}

<h4>@ViewData[Constants.Title]</h4>
@if (Model.Is2faEnabled)
{
  if (Model.RecoveryCodesLeft == 0)
  {
    <div class="alert alert-danger">
      <strong>You have no recovery codes left.</strong>
      <p>You must <a asp-controller="Account" asp-action="GenerateRecoveryCodes">generate a new set of recovery codes</a> before you can log in with a recovery code.</p>
    </div>
  }
  else if (Model.RecoveryCodesLeft == 1)
  {
    <div class="alert alert-danger">
      <strong>You have 1 recovery code left.</strong>
      <p>You can <a asp-controller="Account" asp-action="GenerateRecoveryCodes">generate a new set of recovery codes</a>.</p>
    </div>
  }
  else if (Model.RecoveryCodesLeft <= 3)
  {
    <div class="alert alert-warning">
      <strong>You have @Model.RecoveryCodesLeft recovery codes left.</strong>
      <p>You should <a asp-controller="Account" asp-action="GenerateRecoveryCodes">generate a new set of recovery codes</a>.</p>
    </div>
  }

  if (Model.IsMachineRemembered)
  {
    <form method="post" style="display: inline-block">
      <button type="submit">Forget this browser</button>
    </form>
  }
  <a asp-controller="Account" asp-action="Disable2fa">Disable 2FA</a>
  <a asp-controller="Account" asp-action="GenerateRecoveryCodes">Reset recovery codes</a>
}

<h5>Authenticator app</h5>
@if (!Model.HasAuthenticator)
{
  <a asp-controller="Account" asp-action="EnableAuthenticator">Add authenticator app</a>
}
else
{
  <a asp-controller="Account" asp-action="EnableAuthenticator">Setup authenticator app</a>
  <a asp-controller="Account" asp-action="ResetAuthenticator">Reset authenticator app</a>
}
