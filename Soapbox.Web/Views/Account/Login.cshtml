@model Models.Account.LoginModel
@inject IOptionsSnapshot<Soapbox.Web.Config.SiteSettings> settings

@{
  ViewData["Title"] = "Log in";
}

<style>
  .card {
    display: block;
    width: 400px;
    padding: 20px;
    background: rgba(255,255,255, .1);
    border-radius: 4px;
    margin: 0 auto 20px;
  }

    .card > *:not(:last-child) {
      margin-bottom: 16px;
    }

  .subtle {
    font-size: .8rem;
  }

  .card > header > h1 {
    margin: 0;
  }

  #login .form-field {
    margin-bottom: 12px;
  }

  #login input[type="text"], #login input[type="password"] {
    display: block;
    width: 100%;
    padding: 8px 12px;
    background: white;
    border: 1px solid black;
    border-radius: 2px;
  }

  #login button {
    width: 80%;
    padding: 8px 12px;
    background: white;
    border: 1px solid black;
    border-radius: 2px;
    cursor: pointer;
  }

  #external-account {
    display: flex;
    justify-content: space-around;
  }

    #external-account button {
      width: 30px;
      height: 30px;
      background-color: var(--text-color);
      mask-size: cover;
      border: none;
      cursor: pointer;
    }

  .separator {
    display: flex;
    align-items: center;
    text-align: center;
  }

    .separator::before,
    .separator::after {
      content: '';
      flex: 1;
      height: 1px;
      background: var(--text-color);
    }

    .separator:not(:empty)::before {
      margin-right: .4em;
    }

    .separator:not(:empty)::after {
      margin-left: .4em;
    }
</style>

<div class="container content">
  <div class="card">
    <header class="centered">
      <h1>@ViewData["Title"]</h1>
    </header>

    <section>
      <form id="login" method="post">
        <div asp-validation-summary="ModelOnly"></div>
        <div class="form-field">
          <input asp-for="Input.Username" />
          <span asp-validation-for="Input.Username"></span>
        </div>
        <div class="form-field">
          <input asp-for="Input.Password" />
          <span asp-validation-for="Input.Password"></span>
        </div>
        <div class="form-field centered">
          <label asp-for="Input.RememberMe">
            <input asp-for="Input.RememberMe" />
            @Html.DisplayNameFor(m => m.Input.RememberMe)
          </label>
        </div>
        <div id="submit" class="centered">
          <button type="submit">Log in</button>
        </div>
      </form>
    </section>
    @if ((Model.ExternalLogins?.Count ?? 0) > 0)
    {
      <div class="separator">or</div>
      <form id="external-account" class="form-horizontal" asp-controller="Account" asp-action="LoginExternal" asp-route-returnUrl="@Model.ReturnUrl" method="post">
        @foreach (var provider in Model.ExternalLogins)
        {
          <button type="submit" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account" style="mask: url('/assets/social/@(provider.DisplayName.ToLower()).svg'); mask-size: contain;"></button>
        }
      </form>
    }
  </div>
  <div class="centered subtle">
    <a asp-controller="Account" asp-action="ForgotPassword">Forgot your password?</a>
    @if (settings.Value.AllowRegistration)
    {
      <text> - </text><a asp-controller="Account" asp-action="Register" asp-route-returnUrl="@Model.ReturnUrl">Sign up</a>
    }
  </div>
</div>
