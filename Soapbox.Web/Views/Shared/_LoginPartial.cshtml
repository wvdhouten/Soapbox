@using Microsoft.AspNetCore.Identity
@inject SignInManager<Soapbox.Core.Identity.SoapboxUser> SignInManager
@inject UserManager<Soapbox.Core.Identity.SoapboxUser> UserManager
@inject IOptionsSnapshot<Soapbox.Web.Config.SiteSettings> settings

@if (SignInManager.IsSignedIn(User))
{
  <script>
    document.addEventListener('click', event => {
      const formId = event.target.getAttribute('submit-form');
      if (!formId)
        return;

      const form = Array.from(document.forms).find(form => form.id === formId);

      if (!form)
        return;

      form.submit();

      event.preventDefault();
      event.stopPropagation();
    });
  </script>

  <a asp-area="Identity" asp-page="/Account/Manage/Index">@User.Identity.Name</a><text> - </text>
  <a asp-area="Admin" asp-controller="Site" asp-action="Dashboard">Admin</a>
  <a asp-area="Identity" asp-controller="Account" asp-action="Logout" submit-form="logout">Logout</a>
  <form id="logout" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Pages", new { Area = "" })" method="post" style="display: none;"></form>
}
else
{
  if (settings.Value.AllowRegistration)
  {
    <a asp-controller="Account" asp-action="Register">Register</a>
  }
  <a asp-controller="Account" asp-action="Login">Login</a>
}
