@model Post
@inject Soapbox.Core.Markdown.IMarkdownParser Parser
@{
  var isFullPost = string.IsNullOrWhiteSpace(Model.Excerpt);
  var content = !isFullPost ? Model.Excerpt : Model.Content;
}

<article class="post excerpt">
  <header>
    <div class="container relative">
      <h1>
        <blog-link post="Model" />
      </h1>
      <div class="quick-actions" is-authorized>
        <edit-post post="Model"><i class="fa fa-edit"></i></edit-post>
      </div>
      <div class="meta-data">
        <div>
          <i class="fa fa-calendar"></i>
          <time value=Model.PublishedOn />
        </div>
        <div>
          <i class="fa fa-user-circle"></i>
          <blog-link author="Model.Author" />
        </div>
        <div class="subtle" condition="@Model.Categories.Any()">
          <i class="fa fa-tags"></i>
          <div class="tag-list">
            @foreach (var category in Model.Categories)
            {
              <div class="tag"><blog-link category="category" /></div>
            }
          </div>
        </div>
        <i class="fa fa-thumb-tack" aria-hidden="true" condition="Model.IsPinned"></i>
      </div>
    </div>
  </header>
  <section class="body">
    <div class="container markdown-content">
      @Html.Raw(Parser.ToHtml(content, out var _))
    </div>
  </section>
  <footer>
    <aside class="container">
      <partial name="_Share" model="Model" />
    </aside>
  </footer>
</article>
